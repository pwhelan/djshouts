<?php

use Task\Plugin\ProcessPlugin;


# Include the task/task library and your dependencies.
require 'vendor/autoload.php';

# Instantiate a project by giving it a name.
$project = new Task\Project('djshout');


$project->inject(function ($container) {
	$container['ps'] = new ProcessPlugin;
});

# Add a task
$project->addTask('deploy', ['ps', function ($ps) {
	
	// Precompile HAML files
	$environment = new MtHaml\Environment('php', [
		'enable_escaper' => true
	]);
	
	$haml = new MtHaml\Support\Php\Executor($environment, [
		'cache' => './cache/haml'
	]);
	
	$objects = new RegexIterator(
		new RecursiveIteratorIterator(
			new RecursiveDirectoryIterator('./views/'),
			RecursiveIteratorIterator::SELF_FIRST
		),
		'/^.+\.haml$/i',
		RecursiveRegexIterator::GET_MATCH
	);
	
	foreach($objects as $name => $object){
		print "Render HAML file: {$name}\n";
		@$haml->render($name, []);
	}
	
	$ps->run('appcfg.py', [
		'--oauth2',
		'update',
		__DIR__
	])->pipe($this->getOutput());
}]);

$project->addTask('bower:install', ['ps', function ($ps) {
	
	$ps->run('bower', ['install'])
		->pipe($this->getOutput());
}]);

$project->addTask('bower:update', ['ps', function ($ps) {
	
	$ps->run('bower', ['update'])
		->pipe($this->getOutput());
}]);

$project->addTask('runserver', ['ps', function($ps) {
	
	if (php_uname('s') == 'Linux')
	{
		// Make a better effort in automatically finding a GAE binary.
		$phpExec = "--php_executable_path=/home/pwhelan/.phpbrew/php/php-gae-5.4.19/bin/php-cgi";
	}
	
	//$clear = true;
	$proc = $ps->build('dev_appserver.py', [
		(isset($phpExec) ? $phpExec : ""),
		//(@$clear ? "--clear_datastore" : ""),
		"--port=10000",
		"--storage_path=".__DIR__."/data/",
		"--host=0.0.0.0",
		__DIR__
	]);
	
	$proc->setTimeout(0);
	$proc->pipe($this->getOutput());
	
	$proc->run();
}]);

# Return the project!
return $project;
